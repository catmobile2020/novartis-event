{
    "swagger": "2.0",
    "info": {
        "title": "Novartis Event App",
        "contact": {
            "name": "Mahmoud Mohamed",
            "url": "https://www.linkedin.com/in/mahmoud-mohamed-955932b5/",
            "email": "m.mohamed@cat.com.eg"
        },
        "version": "1.0"
    },
    "basePath": "/api",
    "schemes": [
        "http"
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "register",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "default": "mahmoud"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "default": "mahmoudnada5050@gmail.com"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "default": "123456"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden The client did not have permission to access the requested resource."
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "default": "mahmoudnada5050@gmail.com"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "default": "123456"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden The client did not have permission to access the requested resource."
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/auth/reset-password": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "reset password",
                "parameters": [
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "default": "mahmoudnada5050@gmail.com"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden The client did not have permission to access the requested resource."
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "logout currently logged in user",
                "responses": {
                    "200": {
                        "description": "message"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden The client did not have permission to access the requested resource."
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "refreshes expired token",
                "responses": {
                    "200": {
                        "description": "message"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "Forbidden The client did not have permission to access the requested resource."
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "events"
                ],
                "summary": "get all events paginated",
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/events/{event}/attendance": {
            "post": {
                "tags": [
                    "events"
                ],
                "summary": "submit your attendance",
                "parameters": [
                    {
                        "name": "event",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "attended",
                        "in": "formData",
                        "description": "1=> yes 0=> no",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/setting": {
            "get": {
                "tags": [
                    "setting"
                ],
                "summary": "get setting details",
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/agenda": {
            "get": {
                "tags": [
                    "agenda"
                ],
                "summary": "get Agenda details",
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/agenda/{day}": {
            "get": {
                "tags": [
                    "agenda"
                ],
                "summary": "get Agenda details",
                "parameters": [
                    {
                        "name": "day",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/sessions/{session}/rating": {
            "post": {
                "tags": [
                    "agenda"
                ],
                "summary": "submit your rate",
                "parameters": [
                    {
                        "name": "session",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "rate",
                        "in": "formData",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "comment",
                        "in": "formData",
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/speakers": {
            "get": {
                "tags": [
                    "speakers"
                ],
                "summary": "get speakers paginated",
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/speakers/{speaker}": {
            "get": {
                "tags": [
                    "speakers"
                ],
                "summary": "get single question",
                "parameters": [
                    {
                        "name": "speaker",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/posts": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "get all posts paginated",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "posts"
                ],
                "summary": "store post",
                "parameters": [
                    {
                        "name": "content",
                        "in": "formData",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "photo",
                        "in": "formData",
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/posts/{post}": {
            "get": {
                "tags": [
                    "posts"
                ],
                "summary": "get single post",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/posts/{post}/make-comment": {
            "post": {
                "tags": [
                    "posts"
                ],
                "summary": "store comment to post",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "content",
                        "in": "formData",
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/practices": {
            "get": {
                "tags": [
                    "practices"
                ],
                "summary": "get all practices",
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "practices"
                ],
                "summary": "submit your practice",
                "parameters": [
                    {
                        "name": "practice_id",
                        "in": "formData",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "practice_option_id",
                        "in": "formData",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/practices/{practice}": {
            "get": {
                "tags": [
                    "practices"
                ],
                "summary": "get single practice",
                "parameters": [
                    {
                        "name": "practice",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/account/me": {
            "get": {
                "tags": [
                    "account"
                ],
                "summary": "Get the current logged in user",
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/account/update": {
            "post": {
                "tags": [
                    "account"
                ],
                "summary": "update My Account",
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "default": "mahmoud"
                    },
                    {
                        "name": "email",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string",
                        "default": "mahmoudnada5050@gmail.com"
                    },
                    {
                        "name": "bio",
                        "in": "formData",
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "photo",
                        "in": "formData",
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token"
                    },
                    "400": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/account/update-password": {
            "post": {
                "tags": [
                    "account"
                ],
                "summary": "update My Password",
                "parameters": [
                    {
                        "name": "current_password",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    },
                    {
                        "name": "password",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "format": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Model"
                    },
                    "400": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/notifications": {
            "get": {
                "tags": [
                    "notifications"
                ],
                "summary": "Get all tips notifications paginate 10 per page",
                "responses": {
                    "200": {
                        "description": "objects"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/questions": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "get all Questions paginated",
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/questions/{question}": {
            "get": {
                "tags": [
                    "Questions"
                ],
                "summary": "get single question",
                "parameters": [
                    {
                        "name": "question",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/polls": {
            "get": {
                "tags": [
                    "voting"
                ],
                "summary": "get all polls paginated",
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "voting"
                ],
                "summary": "submit your vot",
                "parameters": [
                    {
                        "name": "poll_id",
                        "in": "formData",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "poll_options_id",
                        "in": "formData",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        },
        "/polls/{poll}": {
            "get": {
                "tags": [
                    "voting"
                ],
                "summary": "get single poll",
                "parameters": [
                    {
                        "name": "poll",
                        "in": "path",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "object"
                    }
                },
                "security": [
                    {
                        "jwt": []
                    }
                ]
            }
        }
    },
    "definitions": {},
    "securityDefinitions": {
        "jwt": {
            "type": "apiKey",
            "description": "Value: Bearer \\<token\\><br><br>",
            "name": "Authorization",
            "in": "header"
        }
    }
}